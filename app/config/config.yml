imports:
    - { resource: parameters.yml }
    - { resource: infrastructure.yml }
    - { resource: security.yml }
    - { resource: services.yml }
#    - { resource: "@SiteAnalyzerBundle/Resources/config/services.yml" }
    - { resource: "@DownloaderBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    jms_serializer.camel_case_naming_strategy.class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy

framework:
    #esi:             ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts:   ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        logging: true
        # Mysql
        driver:   pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset:  UTF8
        # Postgresql
        #driver:   pdo_pgsql #pdo_mysql
        #host:     "%database_host%"
        #port:     5432 #"%database_port%"
        #dbname:   "%database_name%"
        #user:     postgres #"%database_user%"
        #password: "%database_password%"
        #charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.project_dir%/var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        ## enable metadata caching
        #metadata_cache_driver: redis
        ## enable query caching
        #query_cache_driver: redis

doctrine_migrations:
    dir_name: "%kernel.project_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations
    organize_migrations: false # Version >=1.2 Possible values are: "BY_YEAR", "BY_YEAR_AND_MONTH", false

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool:     { type: memory }

# Nelmio CORS
nelmio_cors:
    defaults:
        allow_origin:  ["%cors_allow_origin%"]
        allow_headers: ["content-type", "authorization"]
        allow_methods: ["POST", "PUT", "GET", "DELETE", "OPTIONS"]
        max_age:       3600
    paths:
        #'^/': ~
        '^/api/':
            allow_origin: ["%cors_allow_origin%", 'http://rssp6.ru', 'http://localhost:4200', 'http://localhost:8000', 'http://127.0.0.1', 'http://127.0.0.1:8000']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600

# Nelmio API Doc
nelmio_api_doc:
    sandbox:
        accept_type:        "application/json"
        body_format:
            formats:        [ "json" ]
            default_format: "json"
        request_format:
            formats:
                json:       "application/json"

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

fos_rest:
    body_listener: true
    param_fetcher_listener: true
    view:
        view_response_listener: 'force'
        #exception_wrapper_handler:  null
        formats:
            html: true
            json: true
            jsonp: true
            xml: false
            rss: false
        mime_types:
            #json: ['application/json', 'application/x-json']
            json: ['application/json; charset=utf-8', 'application/json']
            #jpg: 'image/jpeg'
            #png: 'image/png'
        jsonp_handler: ~
        serialize_null: true
    routing_loader:
        default_format:  json
        include_format:  false
    format_listener:
        rules:
            - { path: '^/api/', priorities: ['json'], fallback_format: json, prefer_extension: true }
            - { path: '^/', priorities: ['html', '*/*'], fallback_format: json, prefer_extension: true }
    serializer:
        serialize_null: true
    exception:
        enabled: true

lexik_jwt_authentication:
    private_key_path: "%jwt_private_key_path%"
    public_key_path:  "%jwt_public_key_path%"
    pass_phrase:      "%jwt_key_pass_phrase%"
    token_ttl:        "%jwt_token_ttl%"
    #user_identity_field: username