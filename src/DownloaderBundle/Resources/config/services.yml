services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    DownloaderBundle\:
        resource: '../../*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../{Exception,Features}'
        #public: true


    DownloaderBundle\Service\RemoteBrowserDownloaderService:
        arguments:
            $remoteBrowserHost: "%remote_browser_host%"